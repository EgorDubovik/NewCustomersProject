worker_processes 1;

events {
   worker_connections 1024;
}

http {
   include mime.types;
   default_type application/octet-stream;

   server {
      listen 80;
      server_name api.edservicetx.com prod.edservicetx.com node.edservicetx.com;

      # Redirect HTTP to HTTPS
      location / {
         return 301 https://$host$request_uri;
      }

      # Let's Encrypt challenge
      location /.well-known/acme-challenge/ {
         root /var/www/certbot;
      }
   }

   server {
      listen 443 ssl;
      server_name api.edservicetx.com;

      client_max_body_size 10M;
      ssl_certificate /etc/letsencrypt/live/api.edservicetx.com/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/api.edservicetx.com/privkey.pem;

      location / {
         proxy_pass http://laravel:8000;
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
      }
   }

   server {
      listen 443 ssl;
      server_name node.edservicetx.com;

      client_max_body_size 10M;
      ssl_certificate /etc/letsencrypt/live/node.edservicetx.com/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/node.edservicetx.com/privkey.pem;

      location / {
         proxy_pass http://nodejs:3000;
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
      }
   }

   server {
      listen 443 ssl;
      server_name prod.edservicetx.com;

      ssl_certificate /etc/letsencrypt/live/prod.edservicetx.com/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/prod.edservicetx.com/privkey.pem;

      root /var/www/html;
      index index.html;

      location = /index.html {
         add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
         add_header Pragma "no-cache";
         add_header Expires 0;
         try_files $uri /index.html;
      }

      location / {
         try_files $uri /index.html;
      }

      # location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|otf|eot|ttc|mp4|webm|ogg|mp3|html|json)$ {
      #    try_files $uri =404;
      #    expires max;
      #    access_log off;
      # }
      
      error_page 404 /404.html;
      location = /404.html {
         root /var/www/html;
      }
   }
}